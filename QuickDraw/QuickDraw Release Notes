QuickDraw Release Notes
First created on: 6/8/92 9:44:18 PM

----------------------------------------------------------•----------------------------------------------------------

6/8/92 9:44:28 PM

File: DrawText.a,75
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: QDciPatchROM.a,132
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫Patches∫

File: QuickDrawPatches.a,21
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫Patches∫

File: Patterns.a,14
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: QDUtil.a,21
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: ScaleBlt.a,7
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: Stretch.a,64
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: FontMgr.a,51
Owner: Shannon A. Holland     
Project: MainProj∫Toolbox∫FontMgr∫

Radar bug: #1031825

> Release notes for this change:

Sped up drawing to 16 and 32 bit screens by putting these through the appropriate
ScaleBlt cases (a 16 bit ScaleBlt loop was added for this purpose). Also added a special
case loop for 1->16 and 1->32 (from Sean Callahan)  in ScaleBlt as well as a general
indexed->indexed loop. Changed the meaning of multColor to be a bitfield where bit 0
means the source is black and white only. This allows us to take fast colorizing cases
for text. MakeScaleTbl was changed so that when colorizing it checks if it needs to to
invert the background color and does so appropriately. Changed the Font manager so that
it no longer marks synthetic fonts created with an arithmetic transfer mode as color
fonts.

> What was tested:

Checked colorized text drawing to all bit depths for II and IIci ROMs.
Checked srcCopy and notSrcCopy CopyBits cases for indexed->indexed and indexed->direct
for II and IIci ROMs (along with clipping and alignment cases).
Tested inversion of background colour to 1 bit destinations when fg and bg colours are
different but map to the same index.
----------------------------------------------------------•----------------------------------------------------------
6/10/92 12:21:33 AM

File: DrawingVars.a,13
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: QDciPatchROM.a,133
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫Patches∫

File: Patterns.a,15
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

File: Stretch.a,65
Owner: Shannon A. Holland     
Project: MainProj∫QuickDraw∫

Radar bug: 

> Release notes for this change:

Fixed a bug where we were crashing when Macromind Director or Aldus Freehand were putting
up their splash screen on a Mac II with an 8 bit screen. Fixed a problem where StkLowPt
and HiHeapMark were getting munged by Stretch in low memory situations. Fixed notSrcCopy
and Search Proc problems

> What was tested:

Tested Aldus Freehand and Macromind Director on both Mac II and IIci. Tested notSrcCopy
on both machines. Tested search procs on both machines.
----------------------------------------------------------•----------------------------------------------------------
7/13/92 10:52:53 AM

File: CheckDevicesINIT.a,27
Owner: Dean Yu     
Project: MainProj∫QuickDraw∫

Radar bug: #1035553

> Release notes for this change:

The video patch for the Quadras assumes that the driver field in the DCE is RAM based,
thus a handle.  However, under A/UX the video driver is stored as a pointer, so this code
winds up dereferencing one too many times.  Add a check of the driver flags to see if the
driver is stored in the DCE as a handle or a pointer, and skip a dereference accordingly.

> What was tested:

Since it would take time to get an A/UX system with this fix running, I tested the fix by
an indirect proof.  (I did go to a FEW classes in college…)  I checked the fix on a
normal Cube-E system on a 950 to make sure that the extra dereference was used for handle
based drivers.  Since the branch worked correctly under Cube-E, it has to work correctly
under A/UX in the opposite sense.
----------------------------------------------------------•----------------------------------------------------------
8/21/92 3:13:45 PM

File: DrawText.a,76     
Owner: Dean Yu     
Project: MainProj∫QuickDraw∫

Radar bug: #1039679

> Release notes for this change:

Underlining TrueType characters would overrun the width of the string due to some code
added for double byte TrueType support.  This new code adds some slop to the rectangle
that QuickDraw draws text into.  When QuickDraw goes to underline the text, it draws a
line the width of this rectangle, which is wider than the width of the text, because of
this extra slop.  Added a check to not add this slop if we’re not drawing with a double
byte TrueType font.  This returns the code path to what it was under 7.0, while leaving
the code path there for double byte TrueType fonts.


> What was tested:

Verified that underlining single byte fonts like Symbol works properly.  Also verified
that italicized text is still drawn properly and not chopped off because we’re not adding
this slop.

----------------------------------------------------------•----------------------------------------------------------
