;
;	File:		NotificationMgr.a
;
;	Written by:	Ed Tecot
;
;	Copyright:	© 1988-1992 by Apple Computer, Inc., all rights reserved.
;
;	Change History (most recent first):
;
;	   <SM3>	 5/16/92	kc		Remove "WITH PmgrRec".
;		 <5>	  5/5/92	JSM		The checks for hasIdle and isUniversal in this file should just
;									be forROM (Dean really didn’t have to do all that work in <4>).
;		 <4>	 8/30/91	DTY		Define isUniversal here since it’s no longer defined in
;									BBSStartup.  It’s 0 for System builds and 1 for ROM builds.
;		 <3>	 7/16/90	gbm		Remove redundant definitions
;		 <2>	 5/16/90	MSH		Make IdleUpdate call universal.
;	   <1.3>	 11/1/89	MSH		Rolling in changes from HcMac Reality sources: Activity
;									detection is now a trap.
;	   <1.2>	  3/9/89	MSH		Background notification is now considered useful activity.
;	   <1.1>	11/10/88	CCH		Fixed Header.
;	   <1.0>	 11/9/88	CCH		Adding to EASE.
;	   <1.1>	 5/19/88	BBM		Export the procs, dummy!
;	   <1.0>	 5/11/88	EMT		New Today.
;
;	This file contains the dispatch table hooks to the routines in NotificationMgr.c
; ***************************************************************************
	
			LOAD		'StandardEqu.d'		;										<v1.2>
			INCLUDE		'HardwarePrivateEqu.a'
			INCLUDE		'UniversalEqu.a'
			CASE	OBJ
			STRING	ASIS

; Hook to _NMInstall() in NotificationMgr.c
__NMINSTALL	PROC	EXPORT
			MOVE.L	A0, -(SP)			; Put A0 on stack
			IMPORT	_NMInstall

	if forROM then						; <5>

			TestFor	SupportsIdle
			BEQ.S	@notsupported

			_IdleUpdate					; this is activity, stay at full speed
@notsupported

	endif								; forROM

			BSR		_NMInstall			; Call the C routine
			ADDQ.L	#4, SP				; Clean up stack
			RTS

; Hook to _NMRemove() in NotificationMgr.c
__NMREMOVE	PROC	EXPORT
			MOVE.L	A0, -(SP)			; Put A0 on stack
			IMPORT	_NMRemove

	if forROM then						; <5>

			TestFor	SupportsIdle
			BEQ.S	@notsupported

			_IdleUpdate					; this is activity, stay at full speed
@notsupported

	endif								; forROM

			BSR		_NMRemove			; Call the C routine
			ADDQ.L	#4, SP				; Clean up stack
			RTS

			ENDP

; NMInstall()
NMInstall	PROC	EXPORT

			MOVE.L	4(SP), A0
			_NMInstall
			RTS

			ENDPROC

; NMRemove()
NMRemove	PROC	EXPORT

			MOVE.L	4(SP), A0
			_NMRemove
			RTS

			ENDPROC

			END


