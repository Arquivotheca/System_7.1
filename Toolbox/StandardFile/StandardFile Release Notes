StandardFile Release NotesFirst created on: 4/2/92 11:10:47 PM----------------------------------------------------------¥----------------------------------------------------------4/2/92 11:10:53 PMFile: StandardFilePACK.a,2Owner: Fred Monroe     Project: MainProjºToolboxºStandardFileºRadar bug: #1022940> Release notes for this change:Fixed Standard file to recognize invisible volumes. Special cased ISO and High Sierra version 2.03 cd rom case. (They are accidentally marked invisible) Also fixed the ÒhookÓ mechanism to recognize filtering done to surpress warning dialogs and such.> What was tested:Made one of my drives ÒinvisibleÓ and it doesnÕt show up in the standard file dialog.Tested the filter changes in MacsBug by emulating a filter proc that changes item hit to surpress a dialog.Still need to test the High Sierra case. I will do that in the morning when I can borrow a CD rom drive.----------------------------------------------------------¥----------------------------------------------------------4/3/92 1:19:11 AMFile: StandardFilePACK.a,3Owner: Dean Yu     Project: MainProjºToolboxºStandardFileºRadar bug: #1019375> Release notes for this change:Standard File locks the keyboard on entry and unlocks it on exit.  It should avoid this if the keyboardwas locked coming in.> What was tested:Locked the keyboard and watched StandardFile skip itÕs call to KeyScript(smDisableKeybd) on entry,and watched it skip the call to KeyScript(smEnableKeybd) on exit.----------------------------------------------------------¥----------------------------------------------------------5/12/92 11:54:09 AMFile: StandardFilePACK.a,7Owner: Dean Yu     Project: MainProjºToolboxºStandardFileºRadar bug: #1028452> Release notes for this change:For a6, special checks were added in Standard File to ignore invisible volumes, mainlyfor 20/20.  However, these checks were made before it was determined that a volume wasonline.  This meant that it would always ask for a disk, if it was offline.  Therefore,the machine would ask for a disk back immediately after it was ejected with the Ejectbutton.  The check to see if a volume is invisible or not was moved to after the check tosee if the volume was on line, so that the machine would not ask for the disk back.> What was tested:Before, if the user hits the eject button to eject a floppy, the machine would ask for itback immediately.  WIth this change, the machine does not ask for the disk back whenEject is clicked.----------------------------------------------------------¥----------------------------------------------------------7/5/92 12:21:18 AMFile: StandardFilePACK.a,9Owner: Greg Marriott     Project: MainProjºToolboxºStandardFileºRadar bug: #1034877> Release notes for this change:Modify Standard File to take better care of itÕs pop-up menu.  The old pop-up CDEF usedto take care of deleting and disposing the menu when the control was destroyed.  Thisbehavior changed for Cube-E to support multiple control panels having the same menu ID inthem.  So, we have to change Standard File to delete and dispose of the pop-up menuhandle when exiting.  Leaving the menu in the list can have some bizarre consequences inthe MPW Shell, since the shell will Òclean upÓ after tools that allocate memory and donÕtdispose of it.  The shell mistakes the left over menu handle for a tool allocation anddisposes of the memory block without deleting the menu from the menu list.  Pandemoniumsoon follows.> What was tested:Run the reproducible Shell crash/confusion with and without the fix.  Examine the menulist in several apps that use standard file and verify that no menus are being left overin memory.----------------------------------------------------------¥----------------------------------------------------------7/5/92 4:01:35 PMFile: StandardFilePACK.a,10     Owner: Chris Derossi     Project: MainProjºToolboxºStandardFileºRadar bug: #1034877> Release notes for this change:There was a problem with the previous change: the path popup in the directory dialogwould get initialized correctly, but it wouldnÕt update its contents as you navigatedaround the catalog hierarchy. The popup would stay the same as it started, not matterwhich folders you were in.The problem was caused by the fact that the code to delete and dispose the menu wasremoved because we thought the popup CDEF was doing this. We were only partially correct.HereÕs what happens now:--The popup control is initialized; the popup CDEF inserts the menu into the menu listand removes it before returning from the initialize call. As long as the menu isnÕt inthe menu list when the CDEF is called, the CDEF inserts and removes the menu at thebeginning and end of each call.--Standard File builds its initial menu and inserts it into the menu list and also putsit into the CDEFÕs private data structure like it supposed to. It also tries to removethe CDEFÕs menu from the menu list, but since itÕs not there, the _DeleteMenu calldoesnÕt do anything.--On subsequent calls to the CDEF, since the menu is already in the menu list, the CDEFdoesnÕt do anything with the menu, leaving it in the list.--Each time the directory changes, the menu rebuild code in SF removes the obsolete menuand inserts the updated one. (The code to remove the obsolete menu was the part that wasincorrectly deleted in the previous change. This caused the insert of the updated menu tofail.)--When SF is done, it deletes and disposes the menu. The CDEF wonÕt do this because itassumes SF owns the menu since SF was the one to place it in the menu list.> What was tested:Tried Standard File and verified that the path popup updated correctly while navigatinginto and out of different folders. Also verified that the menu handle was correctlyremoved from the menu list and disposed at the end of the Standard File call.----------------------------------------------------------¥----------------------------------------------------------