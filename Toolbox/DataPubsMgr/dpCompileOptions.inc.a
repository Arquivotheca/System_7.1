;EASE$$$ READ ONLY COPY of file ÒdpCompileOptions.inc.aÓ
; 1.2	ngk 08/08/1989  Completed definitions to match Pascal definitions
;						Added qCatchFailures
; 1.1	ngk 06/11/1989  Added STRING ASIS to DebugerSymbol macro definition
; 1.0	ngk 05/19/1989	Submitted for first time
; END EASE MODIFICATION HISTORY 
;************************************************************************
;*
;*	File:		dpCompileOptions.inc.a
;*
;*	Data Publication Manager
;*
;*	by Nick Kledzik
;*	May 17, 1989
;*
;*	qRangeCheck 	==> overflow checking of numbers, range checking of arrays
;*	qUnInit			==> all variables are initialized to $7267...
;*	qNames			==> all procedures and functions have MacsBug symbols 
;*	qCatchFailures	==> each failure handler breaks into MacsBug on failure
;*
;*	qDebug			==> qRangeCheck, qUnInit, qNames, qCatchFailures
;*
;************************************************************************




;  by defualt qDebug is False
		IF &TYPE('qDebug') = 'UNDEFINED' THEN				
qDebug		Equ		0
		ELSE
qDebug		Equ		1
		ENDIF


; If qDebug is True, set the default for others to be true
		IF qDebug  <> 0 THEN				

			IF &TYPE('qRangeCheck') = 'UNDEFINED' THEN				
qRangeCheck		Equ		1
			ENDIF

			IF &TYPE('qUnInit') = 'UNDEFINED' THEN				
qUnInit			Equ		1
			ENDIF

			IF &TYPE('qNames') = 'UNDEFINED' THEN				
qNames			Equ		1
			ENDIF

			IF &TYPE('qCatchFailures') = 'UNDEFINED' THEN				
qCatchFailures	Equ		1
			ENDIF

		ENDIF	; qDebug
		

; Set the default for the undefined ones to be False	
		IF &TYPE('qRangeCheck') = 'UNDEFINED' THEN				
qRangeCheck		Equ		0
		ENDIF

		IF &TYPE('qUnInit') = 'UNDEFINED' THEN				
qUnInit			Equ		0
		ENDIF
		
		IF &TYPE('qNames') = 'UNDEFINED' THEN				
qNames			Equ		0
		ENDIF
		
		IF &TYPE('qCatchFailures') = 'UNDEFINED' THEN				
qCatchFailures	Equ		0
		ENDIF



; Only define the DebugerSymbol macro if qNames is True
		IF qNames  <> 0 THEN				
			MACRO
				DebugerSymbol &name
				STRING	ASIS
				DC.B	$80 + &LEN(&name), '&name'
				DC.W	$0000
			ENDM
		ENDIF ; qNames

