;
;	File:		ChooseUtilities.a
;
;	Contains:	xxx put contents here xxx
;
;	Written by:	xxx put writers here xxx
;
;	Copyright:	© 1990 by Apple Computer, Inc., all rights reserved.
;
;	Change History (most recent first):
;
;		 <1>	 3/14/90	BBH		first checked in
;
;	To Do:
;

; ~@~Projector~@~ Copyright © 1987, 1988, 1989 Apple Computer, Inc.  All rights reserved.   
; ~@~Projector~@~ File: Choose.a,8+  (3/27/89 9:12:46 AM)   
;
;
;	Modification History
;		6/23/89		BBH		No longer save D0, A5 and A6 in CallIdle
;							Added CallFilter
;
;		7/12/89		BBH		Added CallEventProc.
;							Fixed CallIdle to properly strip parameters from stack.
;
;
;
;------------------------------------------------------------------------------------
;
;			PROCEDURE CallIdle(idleProc:ProcPtr); EXTERNAL

CallIdle	PROC	EXPORT
idleProc	EQU		8
ra			EQU		4
			LINK	A6,#0
			MOVEM.L	D1-D7/A0-A4,-(SP)			; save registers
			MOVE.L	idleProc(A6),A0				; get idleProc
			JSR		(A0)						; and run it
			MOVEM.L	(SP)+,D1-D7/A0-A4			; restore registers
			MOVE.L	ra(A6),idleProc(A6);		; put return address in proper place
			UNLK	A6
			ADD.L	#4,A7						; strip off idle proc
			RTS
;
;			PROCEDURE CallEventProc(VAR theEvent: EventRecord; updateProc: ProcPtr); EXTERNAL

CallEventProc	PROC	EXPORT
theEvent	EQU		12
updateProc	EQU		8
ra			EQU		4

			LINK	A6,#0
			MOVEM.L	D1-D7/A0-A4,-(SP)			; save registers
			MOVE.L	theEvent(A6),-(SP)			; get idleProc
			MOVE.L	updateProc(A6),A0			; get idleProc
			JSR		(A0)						; and run it
			MOVEM.L	(SP)+,D1-D7/A0-A4			; restore registers
			
			MOVE.L	ra(A6),theEvent(A6);
			UNLK	A6
			ADD.L	#8,A7						; popup rval and updateproc
												; stack is now RA
			RTS
;
;	FUNCTION CallFilter(VAR theHandle: CoreHandle; toolName: STR255;
;							toolID: INTEGER): BOOLEAN;
;
CallFilter	FUNC	EXPORT
rval		EQU		22
theHandle	EQU		18
toolName	EQU		14
toolID		EQU		12
filterProc	EQU		8
ra			EQU		4

			LINK	A6,#0						; create a stack frame
			MOVEM.L	D1-D7/A1-A4,-(SP)			; save registers
			
			CLR.B	-(SP)						; clear return space
			MOVE.L	theHandle(A6),-(SP)
			MOVE.L	toolName(A6),-(SP)
			MOVE.W	toolID(A6),-(SP)
			MOVE.L	filterProc(A6),A0
			JSR		(A0);						; run
			MOVE.B	(SP)+,rval(A6);				; get the return value
			
			MOVE.L	ra(A6),theHandle(A6)		; put the return address in position
			
			MOVEM.L	(SP)+,D1-D7/A1-A4			; restore registers
			UNLK	A6							; destroy stack frame
			
			ADD.L	#14,SP						; popup stuff off stack
												; RA, filterProc, toolID, toolName
												; stack now contains
												; rv, theHandle=return address
			RTS									; and go home
			END
			